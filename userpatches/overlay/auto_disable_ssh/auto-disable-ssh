#!/bin/bash

# If SSH is enabled and password has not been changed, disable SSH access
# We use a monotonic timer that can work even without a valid clock.

reset_timer(){
    echo 0 > /etc/ssh-active-without-pw-change
}

increase_timer(){
    CURRENT_TIME=$(< /etc/ssh-active-without-pw-change)
    NEW_TIME=$(($CURRENT_TIME + 10 ))
    echo $NEW_TIME > /etc/ssh-active-without-pw-change
}

# Create install time file first time script is run
if [ ! -f /etc/ssh-active-without-pw-change ]; then
    reset_timer
    exit 0
fi

# Check if password has been changed for user Debian
CHAGE_DATE=$(passwd debian --status | cut -d ' ' -f 3)
if [ "$CHAGE_DATE" != "1970-01-01" ]; then
    echo "Password been changed since install"
    reset_timer
    exit 0
fi

# Check if SSH serivce is active
SSH_STATE=$(systemctl is-active ssh)
if [ "$SSH_STATE" != "active" ]; then
    echo "The SSH service is not active"
    reset_timer
    exit 0
fi

# Check if enough time has passed
MINUTES_ACTIVE=$(< /etc/ssh-active-without-pw-change)
if [ "$MINUTES_ACTIVE" -lt 70 ]; then
    echo "Only $MINUTES_ACTIVE has passed since install"
    increase_timer
    exit 0
fi

echo "The SSH service is active, but the password has not been changed, and enough time has passed. Disabling SSH"
systemctl stop ssh
systemctl disable ssh
reset_timer
